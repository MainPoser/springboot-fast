<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>springboot-arcsoft</artifactId>
        <groupId>cn.com.datu</groupId>
        <version>2.0.1-AFR-GA2-SNAPSHOT</version>
    </parent>
    <artifactId>springboot-arcsoft-web</artifactId>
    <version>2.0.1-AFR-GA2-SNAPSHOT</version>
    <name>springboot-arcsoft-web</name>
    <description>springboot快速启动项目</description>

    <properties>
        <java.version>1.8</java.version>
        <!-- 部署包版本 -->
        <package.version>2.0.1-AFR-GA2-SNAPSHOT</package.version>
        <!-- 部署包前缀 -->
        <package.name.prefix>SPRINGBOOT-FAST</package.name.prefix>
        <!-- 将 maven 自带的时间戳格式化 -->
        <maven.build.timestamp.format>yyyyMMdd</maven.build.timestamp.format>
    </properties>

    <dependencies>
        <!--        arcSoft-->
        <dependency>
            <groupId>com.arcsoft.com</groupId>
            <artifactId>arcsoft-sdk-face</artifactId>
            <version>3.0.0.0</version>
            <scope>system</scope>
            <systemPath>${basedir}/src/main/lib/${pom.env}/arcsoft-sdk-face-3.0.0.0.jar</systemPath>
        </dependency>
        <!--        common-->
        <dependency>
            <groupId>cn.com.datu</groupId>
            <artifactId>springboot-arcsoft-common</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <!--        lombook-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.10</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
        <!--<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
    <profiles>
        <profile>
            <!-- WIN64环境 -->
            <id>WIN64</id>
            <properties>
                <pom.env>WIN64</pom.env>
                <pom.libpath>WIN64</pom.libpath>
            </properties>
            <activation>
                <!--默认生效的配置组-->
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <!-- WIN64环境 -->
            <id>LINUX64</id>
            <properties>
                <pom.env>LINUX64</pom.env>
                <pom.libpath>LINUX64</pom.libpath>
            </properties>
        </profile>
    </profiles>
    <build>
        <finalName>${package.name.prefix}-${package.version}-${git.commit.id.abbrev}-${maven.build.timestamp}
        </finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/docker</directory>
                <includes>
                    <include>Dockerfile</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <encoding>utf-8</encoding>
                    <useDefaultDelimiters>true</useDefaultDelimiters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <includeSystemScope>true</includeSystemScope>
                </configuration>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.2.5</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>validate-the-git-infos</id>
                        <goals>
                            <goal>validateRevision</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
                <configuration>
                    <!-- ".git"文件路径;默认值:${project.basedir}/.git; -->
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <!--<prefix>git</prefix>-->
                    <!-- 使properties扩展到整个maven build 周期
                    Ref: https://github.com/ktoso/maven-git-commit-id-plugin/issue/280 -->
                    <injectAllReactorProjects>true</injectAllReactorProjects>
                    <!--日期格式;默认值:dd.MM.yyyy '@' HH:mm:ss z;-->
                    <dateFormat>yyyyMMddHHmmss</dateFormat>
                    <!--构建过程中,是否打印详细信息;默认值:false;-->
                    <verbose>true</verbose>
                    <!--若项目打包类型为pom,是否取消构建;默认值:true;-->
                    <!--<skipPoms>false</skipPoms>-->
                    <!--是否生成"git.properties"属性文件;默认值:false;-->
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <!--指定"git.properties"文件的存放路径(相对于${project.basedir}的一个路径);-->
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
                    </generateGitPropertiesFilename>
                    <!--".git"文件夹未找到时,构建是否失败;若设置true,则构建失败;若设置false,则跳过执行该目标;默认值:true;-->
                    <!--<failOnNoGitDirectory>true</failOnNoGitDirectory>-->
                    <format>properties</format>
                    <!--<format>json</format>-->
                    <abbrevLength>8</abbrevLength>
                    <!-- git描述配置,可选;由JGit提供实现; -->
                    <gitDescribe>
                        <!-- 是否生成描述属性 -->
                        <skip>false</skip>
                        <!-- 提交操作未发现tag时,仅打印提交操作ID, -->
                        <always>false</always>
                        <!-- 提交操作ID显式字符长度,最大值为:40;默认值:7;
                             0代表特殊意义;后面有解释; -->
                        <abbrev>8</abbrev>
                        <!-- 构建触发时，代码有修改时(即"dirty state"),添加指定后缀;默认值:""; -->
                        <dirty>-dirty</dirty>
                        <forceLongFormat>false</forceLongFormat>
                    </gitDescribe>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
